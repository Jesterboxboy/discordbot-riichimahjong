// protolint:disable REPEATED_FIELD_NAMES_PLURALIZED
syntax = "proto3";

package common;

import "atoms.proto";

service Frey {
  rpc RequestRegistration(AuthRequestRegistrationPayload)
      returns (AuthRequestRegistrationResponse);
  rpc ApproveRegistration(AuthApproveRegistrationPayload)
      returns (AuthApproveRegistrationResponse);
  rpc Authorize(AuthAuthorizePayload)
      returns (AuthAuthorizeResponse);
  rpc QuickAuthorize(AuthQuickAuthorizePayload)
      returns (AuthQuickAuthorizeResponse);
  rpc Me(AuthMePayload)
      returns (AuthMeResponse);
  rpc ChangePassword(AuthChangePasswordPayload)
      returns (AuthChangePasswordResponse);
  rpc RequestResetPassword(AuthRequestResetPasswordPayload)
      returns (AuthRequestResetPasswordResponse);
  rpc ApproveResetPassword(AuthApproveResetPasswordPayload)
      returns (AuthApproveResetPasswordResponse);
  rpc GetAccessRules(AccessGetAccessRulesPayload)
      returns (AccessGetAccessRulesResponse);
  rpc GetRuleValue(AccessGetRuleValuePayload)
      returns (AccessGetRuleValueResponse);
  rpc UpdatePersonalInfo(PersonsUpdatePersonalInfoPayload)
      returns (GenericSuccessResponse);
  rpc GetPersonalInfo(PersonsGetPersonalInfoPayload)
      returns (PersonsGetPersonalInfoResponse);
  rpc FindByTenhouIds(PersonsFindByTenhouIdsPayload)
      returns (PersonsFindByTenhouIdsResponse);
  rpc FindByTitle(PersonsFindByTitlePayload)
      returns (PersonsFindByTitleResponse);
  rpc GetGroups(PersonsGetGroupsPayload)
      returns (PersonsGetGroupsResponse);
  rpc GetEventAdmins(AccessGetEventAdminsPayload)
      returns (AccessGetEventAdminsResponse);

  // admin
  rpc GetSuperadminFlag(AccessGetSuperadminFlagPayload)
      returns (AccessGetSuperadminFlagResponse);
  rpc GetOwnedEventIds(AccessGetOwnedEventIdsPayload)
      returns (AccessGetOwnedEventIdsResponse);
  rpc GetRulesList(AccessGetRulesListPayload)
      returns (AccessGetRulesListResponse);
  rpc GetAllEventRules(AccessGetAllEventRulesPayload)
      returns (AccessGetAllEventRulesResponse);
  rpc GetPersonAccess(AccessGetPersonAccessPayload)
      returns (AccessGetPersonAccessResponse);
  rpc GetGroupAccess(AccessGetGroupAccessPayload)
      returns (AccessGetGroupAccessResponse);
  rpc GetAllPersonAccess(AccessGetAllPersonAccessPayload)
      returns (AccessGetAllPersonAccessResponse);
  rpc GetAllGroupAccess(AccessGetAllGroupAccessPayload)
      returns (AccessGetAllGroupAccessResponse);
  rpc AddRuleForPerson(AccessAddRuleForPersonPayload)
      returns (AccessAddRuleForPersonResponse);
  rpc AddRuleForGroup(AccessAddRuleForGroupPayload)
      returns (AccessAddRuleForGroupResponse);
  rpc UpdateRuleForPerson(AccessUpdateRuleForPersonPayload)
      returns (GenericSuccessResponse);
  rpc UpdateRuleForGroup(AccessUpdateRuleForGroupPayload)
      returns (GenericSuccessResponse);
  rpc DeleteRuleForPerson(AccessDeleteRuleForPersonPayload)
      returns (GenericSuccessResponse);
  rpc DeleteRuleForGroup(AccessDeleteRuleForGroupPayload)
      returns (GenericSuccessResponse);
  rpc ClearAccessCache(AccessClearAccessCachePayload)
      returns (GenericSuccessResponse);
  rpc CreateAccount(PersonsCreateAccountPayload)
      returns (PersonsCreateAccountResponse);
  rpc CreateGroup(PersonsCreateGroupPayload)
      returns (PersonsCreateGroupResponse);
  rpc UpdateGroup(PersonsUpdateGroupPayload)
      returns (GenericSuccessResponse);
  rpc DeleteGroup(PersonsDeleteGroupPayload)
      returns (GenericSuccessResponse);
  rpc AddPersonToGroup(PersonsAddPersonToGroupPayload)
      returns (GenericSuccessResponse);
  rpc RemovePersonFromGroup(PersonsRemovePersonFromGroupPayload)
      returns (GenericSuccessResponse);
  rpc GetPersonsOfGroup(PersonsGetPersonsOfGroupPayload)
      returns (PersonsGetPersonsOfGroupResponse);
  rpc GetGroupsOfPerson(PersonsGetGroupsOfPersonPayload)
      returns (PersonsGetGroupsOfPersonResponse);

  // superadmin: this should be covered with some
  // bootstrap authenthication, TODO
  rpc AddSystemWideRuleForPerson(AccessAddSystemWideRuleForPersonPayload)
      returns (AccessAddSystemWideRuleForPersonResponse);
  rpc AddSystemWideRuleForGroup(AccessAddSystemWideRuleForGroupPayload)
      returns (AccessAddSystemWideRuleForGroupResponse);
}

message AuthRequestRegistrationPayload {
  string email = 1;
  string title = 2;
  string password = 3;
  bool send_email = 4;
}

message AuthRequestRegistrationResponse {
  string approval_code = 1;
}

message AuthApproveRegistrationPayload {
  string approval_code = 1;
}

message AuthApproveRegistrationResponse {
  int32 person_id = 1;
}

message AuthAuthorizePayload {
  string email = 1;
  string password = 2;
}

message AuthAuthorizeResponse {
  int32 person_id = 1;
  string auth_token = 2;
}

message AuthQuickAuthorizePayload {
  int32 person_id = 1;
  string auth_token = 2;
}

message AuthQuickAuthorizeResponse {
  bool auth_success = 1;
}

message AuthMePayload {
  int32 person_id = 1;
  string auth_token = 2;
}

message AuthMeResponse {
  int32 person_id = 1;
  string country = 2;
  string city = 3;
  string email = 4;
  string phone = 5;
  string tenhou_id = 6;
  string title = 7;
  repeated int32 groups = 8;
}

message AuthChangePasswordPayload {
  string email = 1;
  string password = 2;
  string new_password = 3;
}

message AuthChangePasswordResponse {
  string auth_token = 1;
}

message AuthRequestResetPasswordPayload {
  string email = 1;
  bool send_email = 2;
}

message AuthRequestResetPasswordResponse {
  string reset_token = 1;
}

message AuthApproveResetPasswordPayload {
  string email = 1;
  string reset_token = 2;
}

message AuthApproveResetPasswordResponse {
  string new_tmp_password = 1;
}

message AccessGetAccessRulesPayload {
  int32 person_id = 1;
  int32 event_id = 2;
}

message AccessGetAccessRulesResponse {
  AccessRules rules = 1;
}

message AccessGetRuleValuePayload {
  int32 person_id = 1;
  int32 event_id = 2;
  string rule_name = 3;
}

message AccessGetRuleValueResponse {
  RuleValue value = 1;
}

message AccessGetEventAdminsPayload {
  int32 event_id = 1;
}

message AccessGetEventAdminsResponse {
  repeated EventAdmin admins = 1;
}

message AccessGetSuperadminFlagPayload {
  int32 person_id = 1;
}

message AccessGetSuperadminFlagResponse {
  bool is_admin = 1;
}

message AccessGetOwnedEventIdsPayload {
  int32 person_id = 1;
}

message AccessGetOwnedEventIdsResponse {
  repeated int32 event_ids = 1;
}

message AccessGetRulesListPayload {
}

message AccessGetRulesListResponse {
  repeated RuleListItem items = 1;
}

message AccessGetAllEventRulesPayload {
  int32 event_id = 1;
}

message AccessGetAllEventRulesResponse {
  repeated EventRuleListItem person_rules = 1;
  repeated EventRuleListItem group_rules = 2;
}

message AccessGetPersonAccessPayload {
  int32 person_id = 1;
  int32 event_id = 2;
}

message AccessGetPersonAccessResponse {
  AccessRules rules = 1;
}

message AccessGetGroupAccessPayload {
  int32 group_id = 1;
  int32 event_id = 2;
}

message AccessGetGroupAccessResponse {
  AccessRules rules = 1;
}

message AccessGetAllPersonAccessPayload {
  int32 person_id = 1;
}

message AccessGetAllPersonAccessResponse {
  map<int32, RuleListItemExMap> rules_by_event = 1;
}

message AccessGetAllGroupAccessPayload {
  int32 group_id = 1;
}

message AccessGetAllGroupAccessResponse {
  map<int32, RuleListItemExMap> rules_by_event = 1;
}

message AccessAddRuleForPersonPayload {
  string rule_name = 1;
  RuleValue rule_value = 2;
  string rule_type = 3;
  int32 person_id = 4;
  int32 event_id = 5;
}

message AccessAddRuleForPersonResponse {
  int32 rule_id = 1;
}

message AccessAddRuleForGroupPayload {
  string rule_name = 1;
  RuleValue rule_value = 2;
  string rule_type = 3;
  int32 group_id = 4;
  int32 event_id = 5;
}

message AccessAddRuleForGroupResponse {
  int32 rule_id = 1;
}

message AccessUpdateRuleForPersonPayload {
  int32 rule_id = 1;
  RuleValue rule_value = 2;
  string rule_type = 3;
}

message AccessUpdateRuleForGroupPayload {
  int32 rule_id = 1;
  RuleValue rule_value = 2;
  string rule_type = 3;
}

message AccessDeleteRuleForPersonPayload {
  int32 rule_id = 1;
}

message AccessDeleteRuleForGroupPayload {
  int32 rule_id = 1;
}

message AccessClearAccessCachePayload {
  int32 person_id = 1;
  int32 event_id = 2;
}

message AccessAddSystemWideRuleForPersonPayload {
  string rule_name = 1;
  RuleValue rule_value = 2;
  string rule_type = 3;
  int32 person_id = 4;
}

message AccessAddSystemWideRuleForPersonResponse {
  int32 rule_id = 1;
}

message AccessAddSystemWideRuleForGroupPayload {
  string rule_name = 1;
  RuleValue rule_value = 2;
  string rule_type = 3;
  int32 group_id = 4;
}

message AccessAddSystemWideRuleForGroupResponse {
  int32 rule_id = 1;
}

message PersonsCreateAccountPayload {
  string email = 1;
  string password = 2;
  string title = 3;
  string city = 4;
  string phone = 5;
  string tenhou_id = 6;
  string country = 7;
}

message PersonsCreateAccountResponse {
  int32 person_id = 1;
}

message PersonsCreateGroupPayload {
  string title = 1;
  string description = 2;
  string color = 3;
}

message PersonsCreateGroupResponse {
  int32 group_id = 1;
}

message PersonsUpdateGroupPayload {
  int32 group_id = 1;
  string title = 2;
  string description = 3;
  string color = 4;
}

message PersonsDeleteGroupPayload {
  int32 group_id = 1;
}

message PersonsAddPersonToGroupPayload {
  int32 person_id = 1;
  int32 group_id = 2;
}

message PersonsRemovePersonFromGroupPayload {
  int32 person_id = 1;
  int32 group_id = 2;
}

message PersonsGetPersonsOfGroupPayload {
  int32 group_id = 1;
}

message PersonsGetPersonsOfGroupResponse {
  repeated Person people = 1;
}

message PersonsGetGroupsOfPersonPayload {
  int32 person_id = 1;
}

message PersonsGetGroupsOfPersonResponse {
  repeated Group groups = 1;
}

message PersonsUpdatePersonalInfoPayload {
  int32 id = 1;
  string title = 2;
  string country = 3;
  string city = 4;
  string email = 5;
  string phone = 6;
  string tenhou_id = 7;
}

message PersonsGetPersonalInfoPayload {
  repeated int32 ids = 1;
}

message PersonsGetPersonalInfoResponse {
  repeated PersonEx people = 1;
}

message PersonsFindByTenhouIdsPayload {
  repeated string ids = 1;
}

message PersonsFindByTenhouIdsResponse {
  repeated PersonEx people = 1;
}

message PersonsFindByTitlePayload {
  string query = 1;
}

message PersonsFindByTitleResponse {
  repeated Person people = 1;
}

message PersonsGetGroupsPayload {
  repeated int32 ids = 1;
}

message PersonsGetGroupsResponse {
  repeated Group groups = 1;
}
